// <auto-generated />
using KanbanTasker.Services.Database.Components.MSSQL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KanbanTasker.Services.Database.Migrations.MSSQL
{
    [DbContext(typeof(Db_MSSQL))]
    partial class Db_MSSQLModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("KanbanTasker.Model.BoardDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Notes");

                    b.HasKey("Id");

                    b.ToTable("tblBoards");
                });

            modelBuilder.Entity("KanbanTasker.Model.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagBackground");

                    b.Property<string>("TagForeground");

                    b.Property<string>("TagName");

                    b.HasKey("Id");

                    b.ToTable("tblTags");
                });

            modelBuilder.Entity("KanbanTasker.Model.TaskDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BoardId");

                    b.Property<string>("Category");

                    b.Property<string>("ColorKey");

                    b.Property<int>("ColumnIndex");

                    b.Property<string>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<string>("DueDate");

                    b.Property<string>("FinishDate");

                    b.Property<string>("ReminderTime");

                    b.Property<string>("StartDate");

                    b.Property<string>("TimeDue");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("tblTasks");
                });

            modelBuilder.Entity("KanbanTasker.Model.TaskTag", b =>
                {
                    b.Property<int>("TaskID");

                    b.Property<int>("TagID");

                    b.HasKey("TaskID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("TaskTags");
                });

            modelBuilder.Entity("KanbanTasker.Model.TaskDTO", b =>
                {
                    b.HasOne("KanbanTasker.Model.BoardDTO", "Board")
                        .WithMany("Tasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("KanbanTasker.Model.TaskTag", b =>
                {
                    b.HasOne("KanbanTasker.Model.Tag", "Tag")
                        .WithMany("TaskTags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("KanbanTasker.Model.TaskDTO", "Task")
                        .WithMany("TaskTags")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
